ifndef TOP

# project configuration file

# clean-build path
ifndef MTOP
$(error MTOP - path to clean-build (https://github.com/mbuilov/clean-build) is not defined,\
 example: MTOP=/usr/local/clean-build or MTOP=C:\User\clean-build)
endif

# project root directory
override TOP := $(abspath $(dir $(lastword $(MAKEFILE_LIST)))..)

# supported build types
override SUPPORTED_TARGETS := DEBUG RELEASE

# do not inherit variable from environment
TARGET:=

# if TARGET is not specified in command line, set default
ifndef TARGET
override TARGET := RELEASE
endif

# non-empty for debug build
DEBUG := $(filter DEBUG,$(TARGET))

# default value for MODVER
# major.minor.patch
override PRODUCT_VER := 1.0.3

# header generated by $(TOP)/version/version.mk
# $(PRODUCT_NAMES_H) - used in $(MTOP)/WINXX/cres.mk
PRODUCT_NAMES_H := vers.h

# version info for a dll
VENDOR_NAME      := Michael M. Builov
VENDOR_URL       := https://github.com/mbuilov/memstack
PRODUCT_NAME     := Memory Stack allocation library
VENDOR_COPYRIGHT := Copyright (C) 2008-2017 $(VENDOR_NAME), $(VENDOR_URL)

# licence for generated pkgconfig .pc file
PRODUCT_LICENCE  := LGPL version 2.1 or any later version

# library name
MEMSTACK_LIB_NAME := memstack$(if $(DEBUG),d)

# variants of built static library
#  LINUX:
#   R,S   - position-dependent code
#   P     - position-independent code for executables
#   D     - position-independent code for shared objects (dlls)
#  WINDOWS:
#   R,P,D - dynamically linked multi-threaded libc
#   S     - statically linked multi-threaded libc
MEMSTACK_LIB_VARIANTS := R P D S

# variants of built dynamic library
#  LINUX:
#   R,S   - position-independent code
#  WINDOWS:
#   R     - dynamically linked multi-threaded libc
#   S     - statically linked multi-threaded libc
MEMSTACK_DLL_VARIANTS := R S

# by default, build and install both shared and static variants of the library
NO_SHARED:=
NO_STATIC:=

# override defaults, if project configured
-include $(TOP)/conf.mk

endif
