ifneq (override,$(origin TOP))

# project configuration file

override CLEAN_BUILD_REQUIRED_VERSION := 0.6.0

# project root directory
# note: override always, because TOP is auto-defined
override TOP := $(abspath $(dir $(lastword $(MAKEFILE_LIST))))

# BUILD - variable required by clean-build - path to built artifacts
# note: do not take BUILD from environment
BUILD:=

# if BUILD is not specified in command line, set default value
# note: BUILD must override clean-build defined one
ifndef BUILD
override BUILD := $(TOP)/build
endif

# supported build types
# note: override clean-build defaults set in $(MTOP)/defs.mk
override SUPPORTED_TARGETS := DEBUG RELEASE

# build type
# do not inherit variable from environment
TARGET:=

# if TARGET is not specified in command line, set default
# note: override clean-build default set in $(MTOP)/defs.mk
ifndef TARGET
override TARGET := RELEASE
endif

# clean-build generated config file
# note: do not take CONFIG_FILE from environment
CONFIG_FILE:=

# if CONFIG_FILE is not specified in command line, set default value
# note: override clean-build defaults
ifndef CONFIG_FILE
# note: define CONFIG_FILE as recursive variable - in case if BUILD is also recursive
override CONFIG_FILE = $(BUILD)/conf.mk
endif

# default value for MODVER
# major.minor.patch
# note: override clean-build default set in $(MTOP)/defs.mk
override PRODUCT_VER := 1.0.3

# header generated by $(MTOP)/exts/version/version.mk
# $(PRODUCT_NAMES_H) - used in $(MTOP)/WINXX/cres.mk
PRODUCT_NAMES_H := vers.h

# version info for a dll, also needed by $(MTOP)/exts/version/version.mk
VENDOR_NAME      := Michael M. Builov
VENDOR_URL       := https://github.com/mbuilov/memstack
PRODUCT_NAME     := Memory Stack allocation library
VENDOR_COPYRIGHT := Copyright (C) 2008-2017 $(VENDOR_NAME), $(VENDOR_URL)

# licence for generated pkgconfig .pc file
PRODUCT_LICENCE  := LGPL version 2.1 or any later version

# library name
MEMSTACK_LIB_NAME := memstack$(if $(filter DEBUG,$(TARGET)),d)

# variants of built static library
#  LINUX:
#   R,S   - position-dependent code
#   P     - position-independent code for executables
#   D     - position-independent code for shared objects (dlls)
#  WINDOWS:
#   R,P,D - dynamically linked multi-threaded libc
#   S     - statically linked multi-threaded libc
MEMSTACK_LIB_VARIANTS := R P D S

# variants of built dynamic library
#  LINUX:
#   R,S   - position-independent code
#  WINDOWS:
#   R     - dynamically linked multi-threaded libc
#   S     - statically linked multi-threaded libc
MEMSTACK_DLL_VARIANTS := R S

# by default, build and install both shared and static variants of the library
NO_SHARED:=
NO_STATIC:=

# do not inherit variable from environment
PREDEFINES:=

# if PREDEFINES is not specified in command line, set default
# note: override clean-build default set in $(MTOP)/c.mk
ifndef PREDEFINES
ifeq (WINXX,$(OS))
override PREDEFINES = $(call lazy_simple,override PREDEFINES,$(if $(DEBUG),_DEBUG) $(OS_PREDEFINES))
endif
endif

# MTOP - path to clean-build - must be defined in command line
# note: do not inherit MTOP value from environment
MTOP:=

# source config, if it was previously generated
-include $(CONFIG_FILE)

# clean-build path must be defined
ifndef MTOP
$(error MTOP - path to clean-build (https://github.com/mbuilov/clean-build) is not defined,\
 example: MTOP=/usr/local/clean-build or MTOP=C:\User\clean-build)
endif

endif
